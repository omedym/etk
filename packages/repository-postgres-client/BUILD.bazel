load("@aspect_bazel_lib//lib:copy_file.bzl", "copy_file")
load("@aspect_bazel_lib//lib:copy_to_directory.bzl", "copy_to_directory")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@npm//:prisma/package_json.bzl", "bin")

package(default_visibility = ["//visibility:public"])

copy_to_directory(
  name = "prisma_engines",
  srcs = ["//:node_modules/@prisma/engines"],
  include_srcs_patterns = ["**/*.so.*", "**/*.dll.*", "**/*.dynlib.*",  "**/*.dylib.*"],
  exclude_srcs_patterns = ["node_modules/.aspect_rules_js/**"],
  replace_prefixes = {
    "node_modules/@prisma/engines": ""
  }
)

filegroup(
  name = "prisma_schema_postgres",
  srcs = ["schema.prisma"],
  visibility = ["//visibility:public"],
)

# Generate a package.json at build time to formalize this directory as a valid NPM package
genrule(
  name = "package_json",
  outs = ["package.json"],
  cmd = """
    echo "{
  \\"name\\": \\"@omedym/nestjs-dmq-repository-postgres-client\\",
  \\"version\\": \\"0.1.3\\",
  \\"author\\": \\"Omedym, LLC\\",
  \\"license\\": \\"MIT\\",
  \\"main\\": \\"dist/index.js\\",
  \\"module\\": \\"dist/index.js\\",
  \\"types\\": \\"dist/index.d.ts\\",
  \\"engines\\": {
    \\"node\\": \\">=18\\"
  },
  \\"repository\\": {
    \\"type\\": \\"git\\",
    \\"url\\": \\"https://github.com/omedym/nestjs-dmq.git\\",
    \\"directory\\": \\"packages/repository-postgres-client\\"
  },
  \\"dependencies\\": {
    \\"@prisma/client\\": \\"^5.1.1\\",
    \\"@prisma/engines\\": \\"^5.1.1\\",
    \\"@prisma/generator-helper\\": \\"^5.1.1\\"
  }
}" > $@
  """,
)

bin.prisma(
  name = "generate",
  srcs = [
    "package_json",
    ":schema.prisma",
    "//:node_modules/@prisma/client",
    "//:node_modules/@base2/pretty-print-object",
    "//:node_modules/@prisma/generator-helper",
    "//:node_modules/@prisma/engines",
    "//:node_modules/prettier",
    "//:node_modules/typescript",
    "//:node_modules/handlebars",

    "//:node_modules/@types/node",
    "//:node_modules/@types/prettier",
  ],
  args = [
    "generate",
    "--schema",
    "schema.prisma",
  ],
  copy_srcs_to_bin = True,
  outs= ["lib"],
  chdir = package_name(),
  env = {
    "PRISMA_GENERATE_SKIP_AUTOINSTALL": "1",
    "PRISMA_SKIP_POSTINSTALL_GENERATE": "1",
    # This is to fool Prisma CLI that wants to copy something here we also inject the actual client package.json
    "PRISMA_QUERY_ENGINE_LIBRARY": "./package.json",
  }
)

copy_file(
  name = "license",
  src = "//:npm_license",
  out = "LICENSE"
)

npm_package(
  name = "npm",
  # srcs = [":dist", ":prisma_engines",],
  srcs = [
    ":generate",
    ":prisma_engines",
    ":package_json",
    ":schema.prisma",
    ":license",
  ],
  data = [":package_json", ":license"],
  exclude_srcs_patterns = [
    "**/node_modules/**",
    "**/lib/client/package.json",
    "**/lib/client/schema.prisma",
  ],
  replace_prefixes = {
    "prisma_engines": "dist",
    "lib/client": "dist"
  },
  package = "@omedym/nestjs-dmq-repository-postgres-client",
)
