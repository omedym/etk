load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")

package(default_visibility = ["//visibility:public"])

ts_config(
  name = "tsconfig_bazel",
  src = "tsconfig.bazel.json",
  deps = ["//:tsconfig"],
)

filegroup(
  name = "src",
  srcs = glob(
    [
      "src/**/*.ts",
    ],
    exclude = ["**/*.spec.ts"],
  ),
  visibility = ["//visibility:public"],
)

_DEPS = [
  # Dev Dependencies
  "//:node_modules/@nestjs/common",
  "//:node_modules/@types/node",
]

ts_project(
  name = "ts",
  srcs = glob(["src/**/*.ts"], exclude = ["**/*.test.ts", "test/**/*.ts"]),
  declaration = True,
  incremental = True,
  root_dir = "src",
  resolve_json_module = True,
  tags = ["ts", "module"],
  tsconfig = ":tsconfig_bazel",
  validate = False,
  deps = _DEPS,
)

# Generate a package.json at build time to formalize this directory as a valid NPM package
genrule(
  name = "package_json",
  outs = ["package.json"],
  cmd = """
    echo "{
      \\"name\\": \\"@omedym/nestjs-dmq-core\\",
      \\"version\\": \\"0.1.0\\",
      \\"main\\": \\"index.js\\",
      \\"typings\\": \\"index.d.ts\\"
    }" > $@
  """,
)

npm_package(
  name = "js",
  srcs = [":ts"],
  data = [":package_json"] + _DEPS,
  package = "@omedym/nestjs-dmq-core",
)
