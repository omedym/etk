load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")

package(default_visibility = ["//visibility:public"])

ts_config(
  name = "tsconfig_bazel",
  src = "tsconfig.bazel.json",
  deps = ["//:tsconfig"],
)

_DEPS = [
  "//:node_modules/@nestjs/bullmq",
  "//:node_modules/@nestjs/common",
  "//:node_modules/@nestjs/core",
  "//:node_modules/@paralleldrive/cuid2",
  "//:node_modules/@vvo/tzdb",
  "//:node_modules/ajv",
  "//:node_modules/bullmq",
  "//:node_modules/cloudevents",
  "//:node_modules/cron-validator",
  "//:node_modules/luxon",
  "//:node_modules/safe-stable-stringify",
  "//:node_modules/ts-pattern",

  # Dev Dependencies
  "//:node_modules/@types/luxon",
  "//:node_modules/@types/node",
]

ts_project(
  name = "ts",
  srcs = glob(["src/**/*.ts"], exclude = ["**/*.test.ts", "test/**/*.ts"]),
  composite = True,
  declaration = True,
  incremental = True,
  root_dir = "src",
  resolve_json_module = True,
  tags = ["ts", "module"],
  tsconfig = ":tsconfig_bazel",
  validate = True,
  deps = _DEPS,
)

# Generate a package.json at build time to formalize this directory as a valid NPM package
genrule(
  name = "package_json",
  outs = ["package.json"],
  cmd = """
    echo "{
      \\"name\\": \\"@omedym/nestjs-dmq-core\\",
      \\"version\\": \\"0.1.0\\",
      \\"main\\": \\"index.js\\",
      \\"typings\\": \\"index.d.ts\\"
    }" > $@
  """,
)

npm_package(
  name = "js",
  srcs = [":ts"],
  data = [":package_json"] + _DEPS,
  package = "@omedym/nestjs-dmq-core",
)

jest_test(
  name = "test",
  config = "//:jest_config_unit",
  data = _DEPS
    + glob(["src/**/*.ts"], exclude = ["src/**/*.integration.test.ts"])
    + ["//:test_unit_deps", ":tsconfig_bazel"],
  log_level = "warn",
  node_modules = "//:node_modules",
  tags = ["unit"],
  timeout = "short",
)
